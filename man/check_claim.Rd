% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jwt.R
\name{check_claim}
\alias{check_claim}
\title{This function checks that a claim passed to the jwt function is correct.
A claim consists of a claim name (e.g. "iss") and a claim value (e.g. "company A").
The function extracts the value for claim_name from the token and compares
the retrieved value with the claimed value.
Nested claims are supported up to one level, e.g. a claim value of
\code{list(name = "Alice", role = "admin")} is valid.
Nesting at a higher level is not implemented yet and will return FALSE.}
\usage{
check_claim(claim_name, claim_value, token)
}
\arguments{
\item{claim_name}{name of the claim in the JWT, e.g. "iss".}

\item{claim_value}{value the claim should have to pass the test.}

\item{token}{JWT extracted with jose::jwt_decode_hmac.}
}
\value{
TRUE if the claim is present in the JWT, FALSE if not. Returns FALSE
for higher order nested claims.
}
\description{
This function checks that a claim passed to the jwt function is correct.
A claim consists of a claim name (e.g. "iss") and a claim value (e.g. "company A").
The function extracts the value for claim_name from the token and compares
the retrieved value with the claimed value.
Nested claims are supported up to one level, e.g. a claim value of
\code{list(name = "Alice", role = "admin")} is valid.
Nesting at a higher level is not implemented yet and will return FALSE.
}
