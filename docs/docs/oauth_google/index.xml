<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OAuth2 Google on sealr</title>
    <link>https://jandix.github.io/sealr/docs/oauth_google/</link>
    <description>Recent content in OAuth2 Google on sealr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://jandix.github.io/sealr/docs/oauth_google/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OAuth2 Google Simple Example</title>
      <link>https://jandix.github.io/sealr/docs/oauth_google/oauth2_google_simple_example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jandix.github.io/sealr/docs/oauth_google/oauth2_google_simple_example/</guid>
      <description>Install the packages Install the following packages if you haven’t already:
 sealr httr jose jsonlite  define a new plumber router pr &amp;lt;- plumber::plumber$new() pr$handle(&amp;quot;GET&amp;quot;, &amp;quot;/&amp;quot;, function (req, res, code = NULL) { })  define authentication route to issue web tokens (exclude “sealr-jwt” filter using preempt) pr$handle(&amp;quot;GET&amp;quot;, &amp;quot;/authentication&amp;quot;, function (req, res) { url &amp;lt;- &amp;quot;https://accounts.google.com/o/oauth2/v2/auth&amp;quot; query &amp;lt;- list(client_id = &amp;quot;62291147513-pubf19de15prks9p2eij7hloteug5h5d.apps.googleusercontent.com&amp;quot;, redirect_uri = &amp;quot;http://localhost:9090/authentication/redirect&amp;quot;, scope = &amp;quot;https://www.googleapis.com/auth/userinfo.profile&amp;quot;, response_type = &amp;quot;code&amp;quot;) auth_url &amp;lt;- httr::parse_url(url = url) auth_url$query &amp;lt;- query auth_url &amp;lt;- httr::build_url(auth_url) res$status &amp;lt;- 301 res$setHeader(&amp;quot;Location&amp;quot;, auth_url) return() })  define authentication route to issue web tokens (exclude “sealr-jwt” filter using preempt) pr$handle(&amp;quot;GET&amp;quot;, &amp;quot;/authentication/redirect&amp;quot;, function (req, res, code = NULL, error = NULL) { token_url &amp;lt;- &amp;quot;https://www.</description>
    </item>
    
  </channel>
</rss>